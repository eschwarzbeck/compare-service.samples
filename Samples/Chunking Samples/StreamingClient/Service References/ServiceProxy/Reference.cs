//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.IO;

namespace StreamingClient.ServiceProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileMetadata", Namespace="http://workshare.com/compareservices/7.0/samples/data")]
    [System.SerializableAttribute()]
    public partial class FileMetadata : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string FileNameField;

		private long FileSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
		public long FileSize
		{
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://workshare.com/compareservices/7.0/samples/", ConfigurationName="ServiceProxy.ILoadingService")]
    public interface ILoadingService {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://workshare.com/compareservices/7.0/samples/message) of message FileUploadRequest does not match the default value (http://workshare.com/compareservices/7.0/samples/)
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="UploadFile")]
        void UploadFile(StreamingClient.ServiceProxy.FileUploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Ping", ReplyAction="http://workshare.com/compareservices/7.0/samples/ILoadingService/PingResponse")]
        string Ping();
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://workshare.com/compareservices/7.0/samples/message) of message FileUploadRequest does not match the default value (http://workshare.com/compareservices/7.0/samples/)
        [System.ServiceModel.OperationContractAttribute(Action="UploadFile2", ReplyAction="http://workshare.com/compareservices/7.0/samples/ILoadingService/UploadFile2Respo" +
            "nse")]
        StreamingClient.ServiceProxy.FileUploadResponse UploadFile2(StreamingClient.ServiceProxy.FileUploadRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileUploadRequest", WrapperNamespace="http://workshare.com/compareservices/7.0/samples/message", IsWrapped=true)]
    public partial class FileUploadRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://workshare.com/compareservices/7.0/samples/")]
        public StreamingClient.ServiceProxy.FileMetadata Metadata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://workshare.com/compareservices/7.0/samples/", Order=0)]
        public Stream FileByteStream;
        
        public FileUploadRequest() {
        }

		public FileUploadRequest(StreamingClient.ServiceProxy.FileMetadata Metadata, Stream FileByteStream)
		{
            this.Metadata = Metadata;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileUploadResponse", WrapperNamespace="http://workshare.com/compareservices/7.0/samples/message", IsWrapped=true)]
    public partial class FileUploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://workshare.com/compareservices/7.0/samples/", Order=0)]
        public string SessionFileName;
        
        public FileUploadResponse() {
        }
        
        public FileUploadResponse(string SessionFileName) {
            this.SessionFileName = SessionFileName;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoadingServiceChannel : StreamingClient.ServiceProxy.ILoadingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadingServiceClient : System.ServiceModel.ClientBase<StreamingClient.ServiceProxy.ILoadingService>, StreamingClient.ServiceProxy.ILoadingService {
        
        public LoadingServiceClient() {
        }
        
        public LoadingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoadingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoadingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoadingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void StreamingClient.ServiceProxy.ILoadingService.UploadFile(StreamingClient.ServiceProxy.FileUploadRequest request) {
            base.Channel.UploadFile(request);
        }

		public void UploadFile(StreamingClient.ServiceProxy.FileMetadata Metadata, Stream FileByteStream)
		{
            StreamingClient.ServiceProxy.FileUploadRequest inValue = new StreamingClient.ServiceProxy.FileUploadRequest();
            inValue.Metadata = Metadata;
            inValue.FileByteStream = FileByteStream;
            ((StreamingClient.ServiceProxy.ILoadingService)(this)).UploadFile(inValue);
        }
        
        public string Ping() {
            return base.Channel.Ping();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        StreamingClient.ServiceProxy.FileUploadResponse StreamingClient.ServiceProxy.ILoadingService.UploadFile2(StreamingClient.ServiceProxy.FileUploadRequest request) {
            return base.Channel.UploadFile2(request);
        }

		public string UploadFile2(StreamingClient.ServiceProxy.FileMetadata Metadata, Stream FileByteStream)
		{
            StreamingClient.ServiceProxy.FileUploadRequest inValue = new StreamingClient.ServiceProxy.FileUploadRequest();
            inValue.Metadata = Metadata;
            inValue.FileByteStream = FileByteStream;
            StreamingClient.ServiceProxy.FileUploadResponse retVal = ((StreamingClient.ServiceProxy.ILoadingService)(this)).UploadFile2(inValue);
            return retVal.SessionFileName;
        }
    }
}
